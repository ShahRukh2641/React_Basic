{"version":3,"sources":["components/layout/Header.js","components/TodoItems.js","components/Todo.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","react_router_dom","to","TodoItems","getStyle","borderBottom","_this","props","todos","completed","_this$props$todos","this","id","title","type","onChange","markComplete","bind","btnStyle","onClick","delTodo","Component","proptype","todo","PropTypes","object","isRequired","func","border","borderRadius","cursor","float","Todo","map","components_TodoItems","key","array","AddTodo","state","e","setState","target","value","onSubmit","preventDefault","addTodo","display","name","placeholder","flex","className","About","Fragment","App","vari","axios","delete","concat","then","res","Object","toConsumableArray","filter","post","data","_this2","get","_this3","layout_Header","react_router","exact","path","render","AddTodo_AddTodo","components_Todo","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6373658.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Header(){\r\n    return (\r\n        <header style={headerStyle}>\r\n            <h1>TodoList</h1>\r\n            <Link style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle} to=\"/about\">About</Link>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst headerStyle = {\r\n    background: '#333',\r\n    color: '#fff',\r\n    textAlign: 'center',\r\n    padding:'10px'\r\n}\r\n\r\nconst linkStyle ={\r\n    color:'#fff',\r\n    textDecoration: 'none'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoItems extends Component {\r\n    getStyle = ()=>{\r\n      return{\r\n        background: '#f4f4f4',\r\n        padding: '10px',\r\n        borderBottom: '1px #ccc dotted',\r\n        textDecoration: this.props.todos.completed ? 'line-through' : 'none'\r\n      }\r\n\r\n    }\r\n\r\n  render() {\r\n    const {id, title} = this.props.todos;\r\n    return (\r\n        <div style={this.getStyle()}>\r\n          <p>\r\n          <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}/>{' '}\r\n          {title}\r\n          <button style={btnStyle} onClick={this.props.delTodo.bind(this, id)}></button>\r\n          </p>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nTodoItems.proptype ={\r\n    todo: PropTypes.object.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n}\r\n\r\nconst btnStyle = {\r\n  background:'#ff0000',\r\n  color:'#fff',\r\n  border:'none',\r\n  padding:'8px 8px',\r\n  borderRadius:'50%',\r\n  cursor:'pointer',\r\n  float:'right'\r\n}\r\n\r\nexport default TodoItems\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItems from './TodoItems';\r\n\r\nclass Todo extends Component {\r\n  render() {\r\n    return this.props.todos.map((todo)=>(\r\n        <TodoItems  key={todo.id} todos={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>      \r\n    ));\r\n  }\r\n}\r\n\r\n\r\nTodo.proptype ={\r\n    todos: PropTypes.array.isRequired,\r\n    markComplete: PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class AddTodo extends Component {\r\n    state = {\r\n        title : ''\r\n    }\r\n\r\n    onChange = (e) => this.setState({title: e.target.value});\r\n\r\n    onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state.title);\r\n        this.setState({title:''});\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} style={{display:'flex'}}>\r\n        <input type=\"text\" name=\"title\" placeholder=\"Add Todo...\" style={{flex:'10', padding: '5px'}}\r\n        value={this.state.title}\r\n        onChange={this.onChange}/>\r\n        <input type=\"submit\" value=\"Submit\" className=\"btn\" style={{flex:'1'}}/>\r\n      </form>\r\n    )\r\n  }\r\n}\r\nAddTodo.proptype ={\r\n  addTodo: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>This is the TodoList app v1.0.0. It is part of a React crash course</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport Todo from './components/Todo';\nimport './App.css';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About'\nimport uuid from 'uuid';\nimport axios from 'axios';\n\n\n\nclass App extends Component {\n  state = {\n    todos:[]\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => this.setState({todos : res.data}))\n  }\n  markComplete = (id) =>{\n    this.setState({todos: this.state.todos.map(vari=>{\n      if(vari.id === id){\n        vari.completed = !vari.completed;\n      }\n        return vari;\n    })})\n  } \n\n  delTodo = (id) =>{\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => this.setState({todos:[...this.state.todos.filter(todo => todo.id !== id)]}));\n  }\n\n  addTodo = (title)=>{\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n    .then(res => this.setState({todos:[...this.state.todos, res.data]}));\n  }\n\n\n  render() {\n       return (\n          <Router>\n            <div className=\"App\">\n              <div className=\"container\">\n                <Header />\n                <Route exact path=\"/\" render={props=>(\n                  <React.Fragment>\n                      <AddTodo addTodo={this.addTodo}/>\n                      <Todo  todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n                  </React.Fragment>\n                )}/>\n                <Route path=\"/about\" component={About}/>\n              </div>\n            </div>\n          </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}